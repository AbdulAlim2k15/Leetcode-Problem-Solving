# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if(head.next is None):
            return None
        slow_p = head
        fast_p = head.next.next
        while fast_p and fast_p.next:
            slow_p = slow_p.next
            fast_p = fast_p.next.next

        temp = slow_p.next.next
        slow_p.next = temp
        return head
